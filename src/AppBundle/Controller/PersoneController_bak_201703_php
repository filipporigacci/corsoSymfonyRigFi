<?php

namespace AppBundle\Controller;

use AppBundle\Entity\Persone;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Component\HttpFoundation\Request;

/**
 * Persone controller.
 *
 * @Route("persone")
 */
class PersoneController extends Controller
{
    /**
     * Lists all persone entities.
     *
     * @Route("/", name="persone_index")
     * @Method("GET")
     */
    public function indexAction()
    {
        $em = $this->getDoctrine()->getManager();

        $persones = $em->getRepository('AppBundle:Persone')->findAll();

        return $this->render('AppBundle:persone:index.html.twig', array('persones' => $persones,));
    }

    /**
     * Creates a new persone entity.
     *
     * @Route("/new", name="persone_new", options={"expose"=true})
     * @Method({"GET", "POST"})
     */
    public function newAction(Request $request)
    {
//      Anche newAction è stata cambiata il 7/3/2017 (lez n 5) secondo lo stesso proncipio con cui ha modificato editAction
//      Altrimenti avrei avuto:
//      ERROR - Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException: "No route found for "POST /persone/":
//      Method Not Allowed (Allow: GET, HEAD)" at C:\xampp\htdocs\corsoSymfony_3.2_git\var\cache\dev\classes.php line 3489
        $persone = new Persone();
//      varaiazione del 7/3/2017 (lez n 5)
//      $form = $this->createForm('AppBundle\Form\PersoneType', $persone);
        $form = $this->createForm('AppBundle\Form\PersoneType',$persone,array('action' => $this->generateUrl('persone_new')));
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $em = $this->getDoctrine()->getManager();
            $em->persist($persone);
            $em->flush($persone);
            // mio esercizio sui log
            $this->get('log_example_test')->log('Creata nuova anagrafica '.$persone->getCodiceFiscale());
//          varaiazione del 7/3/2017 (lez n 5)
//          return $this->redirectToRoute('persone_show', array('id' => $persone->getId()));
            return $this->redirect($this->generateUrl('persone_index'));
        }
        return $this->render('@App/persone/new.html.twig', array('persone' => $persone,'form' => $form->createView(),));
    }

    /**
     * Finds and displays a persone entity.
     *
     * @Route("/{id}", name="persone_show", options={"expose"=true})
     * @Method("GET")
     */
    public function showAction(Persone $persone)
    {
        $deleteForm = $this->createDeleteForm($persone);

        return $this->render('@App/persone/show.html.twig', array('persone' => $persone,'delete_form' => $deleteForm->createView(),));
    }

    /**
     * Displays a form to edit an existing persone entity.
     *
     * @Route("/{id}/edit", name="persone_edit", options={"expose"=true})
     * @Method({"GET", "POST"})
     */
    public function editAction(Request $request, Persone $persone)
    {
//      lezione n 5 del 2017/3/7: stravolto editAction (secondo me lo ha fatto seguendo quanto era già scritto in newAction)
/*
        $deleteForm = $this->createDeleteForm($persone);
        $editForm = $this->createForm('AppBundle\Form\PersoneType',$persone);
        $editForm->handleRequest($request);
*/
        $form = $this->createForm('AppBundle\Form\PersoneType',$persone,array('action' => $this->generateUrl('persone_edit',array('id'=>$persone->getId()))));
        $form->handleRequest($request);
/*
        if ($editForm->isSubmitted() && $editForm->isValid()) {
            $this->getDoctrine()->getManager()->flush();

            // mio esercizio sui log
            $this->get('log_example_test')->log('Modificata l\'anagrafica '.$persone->getCodiceFiscale());

            return $this->redirectToRoute('persone_edit', array('id' => $persone->getId()));
        }
*/
        if ($form->isSubmitted() && $form->isValid()) {
            $em = $this->getDoctrine()->getManager();

            // mio esercizio sui log
            $this->get('log_example_test')->log('Modificata l\'anagrafica '.$persone->getCodiceFiscale());

            $em->flush($persone);
            return $this->redirect($this->generateUrl('persone_index'));
        }

//      return $this->render('@App/persone/edit.html.twig', array('persone' => $persone,'edit_form' => $editForm->createView(),'delete_form' => $deleteForm->createView(),));
        return $this->render('@App/persone/edit.html.twig', array('persone' => $persone, 'form' => $form->createView(), ));
    }

    /**
     * Deletes a persone entity.
     *
     * @Route("/{id}", name="persone_delete")
     * @Method("DELETE")
     */
    public function deleteAction(Request $request, Persone $persone)
    {
        $form = $this->createDeleteForm($persone);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $em = $this->getDoctrine()->getManager();
            $em->remove($persone);
            $em->flush($persone);

            $this->get('log_example')->log('Cancellata l\'anagrafica '.$persone->getCodiceFiscale());
        }

        return $this->redirectToRoute('persone_index');
    }

    /**
     * Creates a form to delete a persone entity.
     *
     * @param Persone $persone The persone entity
     *
     * @return \Symfony\Component\Form\Form The form
     */
    private function createDeleteForm(Persone $persone)
    {
        return $this->createFormBuilder()
            ->setAction($this->generateUrl('persone_delete', array('id' => $persone->getId())))
            ->setMethod('DELETE')
            ->getForm()
            ;
    }

    /**
     *
     * @Route("/esercizio/{surname}")
     * @Method("GET")
     */
    public function esercizioAction($surname)
    {
    /*
        // Esercizio numero 1 dopo la prima lezione
        // Salutare il cognome immesso se esiste in db altrimenti invitarlo
        $em = $this->getDoctrine()->getManager();
        //$persones = $em->getRepository('AppBundle:Persone')->findAll();
        $people = $em->getRepository('AppBundle:Persone')->findOneByCognome($surname);

        // Verifica esercizio: OK! Però se avessi voluto gestire il ritorno dal db nel COntroller, avrei dovuto fare come segue:
        //$trovato=count($people);
        // Poi nel twig metterei lo IF in base al valore di $trovato (vero o falso)

        return $this->render('@App/Default/indexEsercizio.html.twig', array(
            'people'  => $people,
            'surname' => $surname,
        ));
    */


        // Secondo esempio della terza lezione (sui servizi)
        // Il primo (scrittura diretta nel file di log) l'ho inserito nei controller che eseguono l'inserimento, la cancellazione e la modifica delle anagrafiche
        // Il secondo esempio lo lascio così com'é stato svolto a Pisa: inserire nel file di log un messaggio ma attraverso un altro servizio
        $persona = $this->get('servizio_ricerca')->DBmanager($surname);
        //return $this->render('@App/persone/index.html.twig', array('persones' => $people,));

        return $this->render('@App/Default/indexEsercizio.html.twig', array('people' => $persona,'surname' => $surname,));

    }
}
